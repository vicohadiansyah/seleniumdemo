{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2023-08-07T14:52:26.907Z",
    "end": "2023-08-07T14:52:30.755Z",
    "duration": 3848,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2b08496f-c497-480a-ada7-33e4fc939af6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "546cf5b4-8ff0-41c8-be35-ff10068151aa",
          "title": "add todo tests",
          "fullFile": "C:\\Users\\Admin\\seleniumdemo\\test\\firsttest.js",
          "file": "\\test\\firsttest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "succses fully add on todo list",
              "fullTitle": "add todo tests succses fully add on todo list",
              "timedOut": null,
              "duration": 2106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//lauch brwoser \n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        //navigate url \n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n        // add a todo\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium Pratice\", Key.RETURN);\n        //assertion\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n            return value\n        });\n        //assert use chai should\n        todoText.should.equal(\"Selenium Pratice\")\n        //close browser\n        await driver.quit();",
              "err": {},
              "uuid": "7d059ae7-4b72-482c-b74e-aa1b5912944b",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d059ae7-4b72-482c-b74e-aa1b5912944b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2106,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "76c44822-1e9a-4f07-9fc0-95b594843ee2",
          "title": "add anothet todo tests",
          "fullFile": "C:\\Users\\Admin\\seleniumdemo\\test\\secondtest.js",
          "file": "\\test\\secondtest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "succses fully add another on todo list",
              "fullTitle": "add anothet todo tests succses fully add another on todo list",
              "timedOut": null,
              "duration": 2156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//lauch brwoser \n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        //navigate url \n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n        // add a todo\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium Pratice\", Key.RETURN);\n        //assertion\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n            return value\n        });\n        //assert use chai should\n        todoText.should.equal(\"Selenium Pratice\")\n        //close browser\n        await driver.quit();",
              "err": {},
              "uuid": "94a5fd84-f214-4162-8c60-4e89fde03813",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add new test for report",
              "fullTitle": "add anothet todo tests Add new test for report",
              "timedOut": null,
              "duration": 1326,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//lauch brwoser \n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        //navigate url \n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n        // add a todo\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium Pratice\", Key.RETURN);\n        //assertion\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n            return value\n        });\n        //assert use chai should\n        todoText.should.equal(\"Selenium \")\n        //close browser\n        await driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Selenium Pratice' to equal 'Selenium '",
                "estack": "AssertionError: expected 'Selenium Pratice' to equal 'Selenium '\n    at Context.<anonymous> (test\\secondtest.js:48:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Selenium Pratice\n+ Selenium \n"
              },
              "uuid": "5a475d4e-72c7-4222-a62d-c2db80635795",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94a5fd84-f214-4162-8c60-4e89fde03813"
          ],
          "failures": [
            "5a475d4e-72c7-4222-a62d-c2db80635795"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3482,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "TestSelenium",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "TestReport",
        "reportFilename": "TestSelenium"
      },
      "version": "6.2.0"
    }
  }
}