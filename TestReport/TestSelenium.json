{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2023-08-07T13:18:56.243Z",
    "end": "2023-08-07T13:18:59.594Z",
    "duration": 3351,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fac49908-6b41-48ad-9e2f-a9d3ce5562a1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "629a1e23-7e7b-495c-8b2a-4613cc75e545",
          "title": "add todo tests",
          "fullFile": "C:\\Users\\Admin\\seleniumdemo\\test\\firsttest.js",
          "file": "\\test\\firsttest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "succses fully add on todo list",
              "fullTitle": "add todo tests succses fully add on todo list",
              "timedOut": null,
              "duration": 1680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//lauch brwoser \n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        //navigate url \n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n        // add a todo\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium Pratice\", Key.RETURN);\n        //assertion\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n            return value\n        });\n        //assert use chai should\n        todoText.should.equal(\"Selenium Pratice\")\n        //close browser\n        await driver.quit();",
              "err": {},
              "uuid": "28f7423e-0e0f-4a4e-bc15-d48fb803d77e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28f7423e-0e0f-4a4e-bc15-d48fb803d77e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1680,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "3296e8bc-3b8d-4911-9c18-5a3a7ae5eedf",
          "title": "add anothet todo tests",
          "fullFile": "C:\\Users\\Admin\\seleniumdemo\\test\\secondtest.js",
          "file": "\\test\\secondtest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "succses fully add another on todo list",
              "fullTitle": "add anothet todo tests succses fully add another on todo list",
              "timedOut": null,
              "duration": 1776,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//lauch brwoser \n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        //navigate url \n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n        // add a todo\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium Pratice\", Key.RETURN);\n        //assertion\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n            return value\n        });\n        //assert use chai should\n        todoText.should.equal(\"Selenium Pratice\")\n        //close browser\n        await driver.quit();",
              "err": {},
              "uuid": "f3154181-4cb3-4cff-9607-e8eaf10b297c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add new test for report",
              "fullTitle": "add anothet todo tests Add new test for report",
              "timedOut": null,
              "duration": 1279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//lauch brwoser \n        let driver = await new Builder().forBrowser(\"chrome\").build();\n        //navigate url \n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n        // add a todo\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Selenium Pratice\", Key.RETURN);\n        //assertion\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function(value){\n            return value\n        });\n        //assert use chai should\n        todoText.should.equal(\"Selenium \")\n        //close browser\n        await driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Selenium Pratice' to equal 'Selenium '",
                "estack": "AssertionError: expected 'Selenium Pratice' to equal 'Selenium '\n    at Context.<anonymous> (test\\secondtest.js:48:25)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Selenium Pratice\n+ Selenium \n"
              },
              "uuid": "a7a177a0-4ce1-4cdf-9829-f855bd1a1acf",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3154181-4cb3-4cff-9607-e8eaf10b297c"
          ],
          "failures": [
            "a7a177a0-4ce1-4cdf-9829-f855bd1a1acf"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3055,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "TestSelenium",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "TestReport",
        "reportFilename": "TestSelenium"
      },
      "version": "6.2.0"
    }
  }
}